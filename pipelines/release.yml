# Build and publish public version of extension to Marketplace

# Version the build using the tag name. eg. 'v1.1.102'
name: $(SourceBranchName)

trigger: none

pr: none

steps:
  - checkout: self
    fetchTags: true

  - script: |
      env -0 | sort -z | tr '\0' '\n'
    displayName: "Script: Dump environment variables"

  - task: NodeTool@0
    displayName: "NodeTool"
    inputs:
      versionSpec: "16.x"

  - task: Npm@1
    displayName: "Npm: Install"
    inputs:
      command: ci
      workingDir: extension

  - script: printenv
    displayName: "Script: printenv"

  - script: npm run test
    displayName: "Script: Test"
    workingDirectory: extension

  - pwsh: |
      $config = (Get-Content vss-extension.json) | ConvertFrom-Json
      $version = "$(Build.SourceBranchName)".Replace("v", "")
      $config.version = $version
      $config | ConvertTo-Json -depth 3 | Set-Content vss-extension.json

      (Get-Content vss-extension.json)
    displayName: "PowerShell: Patch version"
    workingDirectory: extension

  - script: npm run package
    displayName: "Script: Package"
    workingDirectory: extension

  # - pwsh: |
  #     $inputFile = "./dist/dashboard/dashboard.js"
  #     $token = "#applicationInsightsConnectionString#"
  #     $tokenValue = "$(APPLICATION_INSIGHTS_CONNECTIONSTRING)"
  #     (Get-Content $inputFile) | ForEach-Object { $_ -replace $token, $tokenValue } | Set-Content $inputFile
  #   workingDirectory: extension
  #   displayName: "Replace tokens"

  - script: |
      npx tfx extension publish --token $(MARKETPLACE_TOKEN) --manifest-globs vss-extension.json --overrides-file configs/release.json --output-path out --no-wait-validation
    displayName: "Script: Publish to Marketplace"
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    workingDirectory: extension
