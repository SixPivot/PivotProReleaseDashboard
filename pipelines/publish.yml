# Build and publish extension to Marketplace

trigger:
  branches:
    include:
      - main

variables:
  - group: Tokens
  - name: npm_config_cache
    value: $(Pipeline.Workspace)/.npm

steps:
  - checkout: self
    fetchDepth: 0

  - task: NodeTool@0
    displayName: "NodeTool"
    inputs:
      versionSpec: "16.x"

  - task: Cache@2
    displayName: Cache NPM packages
    inputs:
      key: 'npm | "$(Agent.OS)" | extension/package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(npm_config_cache)

  - task: Npm@1
    displayName: "Npm: Install"
    inputs:
      command: ci
      workingDir: extension

  - script: |
      npx nbgv cloud --all-vars
    displayName: "Script: Set version"
    workingDirectory: extension

  - script: printenv
    displayName: "Script: printenv"

  - script: npm run test
    displayName: "Script: Test"
    workingDirectory: extension

  - pwsh: |
      $config = (Get-Content vss-extension.json) | ConvertFrom-Json
      $config.version = $env:NBGV_NPMPACKAGEVERSION
      $config | ConvertTo-Json -depth 3 | Set-Content vss-extension.json
    displayName: "PowerShell: Patch version"
    workingDirectory: extension

  - script: npm run package
    displayName: "Script: Package"
    workingDirectory: extension

  - pwsh: |
      $inputFile = "./dist/dashboard/dashboard.js"
      $token = "#applicationInsightsConnectionString#"
      $tokenValue = "$(APPLICATION_INSIGHTS_CONNECTIONSTRING)"
      (Get-Content $inputFile) | ForEach-Object { $_ -replace $token, $tokenValue } | Set-Content $inputFile
    workingDirectory: extension
    displayName: "Replace tokens"

  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      - script: |
          npx tfx extension publish --token $MARKETPLACE_TOKEN --manifest-js vss-extension.js --output-path out-dev --no-wait-validation --env mode=development
        displayName: "Script: Publish to Marketplace (Dev)"
        workingDirectory: extension
        env:
          MARKETPLACE_TOKEN: $(MARKETPLACE_TOKEN)

      - script: |
          npx tfx extension publish --token $MARKETPLACE_TOKEN --manifest-js vss-extension.js --output-path out-test --no-wait-validation --env mode=test
        displayName: "Script: Publish to Marketplace (Test)"
        workingDirectory: extension
        env:
          MARKETPLACE_TOKEN: $(MARKETPLACE_TOKEN)
  - ${{ else }}:
      - script: |
          npx tfx extension create --manifest-js vss-extension.js --output-path out-dev --no-wait-validation --env mode=development
        displayName: "Script: Create vsix (Dev)"
        workingDirectory: extension

      - script: |
          npx tfx extension create --manifest-js vss-extension.js --output-path out-test --no-wait-validation --env mode=test
        displayName: "Script: Create vsix (Test)"
        workingDirectory: extension
